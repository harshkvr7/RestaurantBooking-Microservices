server:
  port: 8083

spring:
  application:
    name: restaurant-service
  datasource:
    url: ${RESTAURANTS_DB_URL:jdbc:postgresql://localhost:5433/restaurants_db}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  kafka:
    producer:
      bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring:
          json:
            add:
              type:
                info:
                  headers: true
            type:
              mapping: restaurantViewedEvent:com.rms.restaurant_service.dto.RestaurantViewedEvent,reviewAddedEvent:com.rms.restaurant_service.dto.ReviewAddedEvent,ratingAddedEvent:com.rms.restaurant_service.dto.RatingAddedEvent
  data:
    redis:
      host: ${RESTAURANT_CACHE_HOST:localhost}
      port: ${RESTAURANT_CACHE_PORT:6383}
              
service:
  urls:
    api-gateway:  ${API_GATEWAY_URL:http://localhost:8080}
    auth-service: ${AUTH_SERVICE_URL:http://localhost:8081}
    user-service: ${USER_SERVICE_URL:http://localhost:8082}
    restaurant-service: ${RESTAURANT_SERVICE_URL:http://localhost:8083}
    media-service: ${MEDIA_SERVICE_URL:http://localhost:8084}
    reservation-service: ${RESERVATION_SERVICE_URL:http://localhost:8085}
    menu-item-service: ${MENU_ITEM_SERVICE_URL:http://localhost:8087}

