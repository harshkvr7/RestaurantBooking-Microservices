server:
  port: 8085

spring:
  application:
    name: reservation-service

  datasource:
    url: ${RESERVATIONS_DB_URL:jdbc:postgresql://localhost:5434/reservations_db}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

  kafka:
    producer:
      bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        # Correctly formatted properties
        spring.json.add.type.info.headers: true
        # Corrected mapping for both event types, without the .java extension
        spring.json.type.mapping: reservationRequestEvent:com.rms.reservation_service.dto.ReservationRequestEventDto,reservationStatusUpdateEvent:com.rms.reservation_service.dto.ReservationStatusUpdateEventDto,reservationRequestCreatedEvent:com.rms.reservation_service.dto.ReservationRequestCreatedEvent

service:
  urls:
    api-gateway:  ${API_GATEWAY_URL:http://localhost:8080}
    auth-service: ${AUTH_SERVICE_URL:http://localhost:8081}
    user-service: ${USER_SERVICE_URL:http://localhost:8082}
    restaurant-service: ${RESTAURANT_SERVICE_URL:http://localhost:8083}
    media-service: ${MEDIA_SERVICE_URL:http://localhost:8084}
    reservation-service: ${RESERVATION_SERVICE_URL:http://localhost:8085}
    menu-item-service: ${MENU_ITEM_SERVICE_URL:http://localhost:8087}