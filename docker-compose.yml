version: '3.8'

services:

  # -------------------------------------------
  # INFRASTRUCTURE SERVICES
  # -------------------------------------------
  kafka:
    image: apache/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:9093'
      CLUSTER_ID: 'Rms-queue'
      KAFKA_LISTENERS: 'INTERNAL://0.0.0.0:29092,CONTROLLER://kafka:9093,EXTERNAL://0.0.0.0:9092'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka:29092,EXTERNAL://localhost:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data

  user-db:
    image: postgres:15
    container_name: user-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: users_db
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - user-pgdata:/var/lib/postgresql/data

  restaurant-db:
    image: postgres:15
    container_name: restaurant-db
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: restaurants_db
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - restaurant-pgdata:/var/lib/postgresql/data
  
  reservation-db:
    image: postgres:15
    container_name: reservation-db
    ports:
      - "5434:5432"
    environment:
      POSTGRES_DB: reservations_db
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - reservation-pgdata:/var/lib/postgresql/data

  menu-item-db:
    image: postgres:15
    container_name: menu-item-db
    ports:
      - "5435:5432"
    environment:
      POSTGRES_DB: menu_items_db
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - menu-item-pgdata:/var/lib/postgresql/data
  
  analytics-db:
    image: postgres:15
    container_name: analytics-db
    restart: always
    ports:
      - "5437:5432"
    environment:
      POSTGRES_DB: analytics_db
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - analytics-pgdata:/var/lib/postgresql/data

  menu-item-cache:
    image: redis:latest
    container_name: menu-item-cache
    restart: always
    ports:
      - "6382:6379"
    volumes:
      - menu-item-cache-data:/data

  restaurant-cache:
    image: redis:latest
    container_name: restaurant-cache
    restart: always
    ports:
      - "6383:6379"
    volumes:
      - restaurant-cache-data:/data

  # -------------------------------------------
  # APPLICATION SERVICES
  # -------------------------------------------

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      API_GATEWAY_URL: ${API_GATEWAY_URL}
      USER_SERVICE_URL: ${USER_SERVICE_URL}
      AUTH_SERVICE_URL: ${AUTH_SERVICE_URL}
      RESTAURANT_SERVICE_URL: ${RESTAURANT_SERVICE_URL}
      MEDIA_SERVICE_URL: ${MEDIA_SERVICE_URL}
      RESERVATION_SERVICE_URL: ${RESERVATION_SERVICE_URL}
      MENU_ITEM_SERVICE_URL: ${MENU_ITEM_SERVICE_URL}
      ANALYTICS_SERVICE_URL: ${ANALYTICS_SERVICE_URL}

  auth-service:
    build: ./auth-service
    container_name: auth-service
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
      API_GATEWAY_URL: ${API_GATEWAY_URL}
      USER_SERVICE_URL: ${USER_SERVICE_URL}
      AUTH_SERVICE_URL: ${AUTH_SERVICE_URL}
      RESTAURANT_SERVICE_URL: ${RESTAURANT_SERVICE_URL}
      MEDIA_SERVICE_URL: ${MEDIA_SERVICE_URL}
      RESERVATION_SERVICE_URL: ${RESERVATION_SERVICE_URL}
      MENU_ITEM_SERVICE_URL: ${MENU_ITEM_SERVICE_URL}
    depends_on:
      - user-service
      - kafka

  user-service:
    build: ./user-service
    container_name: user-service
    environment:
      USERS_DB_URL: ${USERS_DB_URL}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      API_GATEWAY_URL: ${API_GATEWAY_URL}
      USER_SERVICE_URL: ${USER_SERVICE_URL}
      AUTH_SERVICE_URL: ${AUTH_SERVICE_URL}
      RESTAURANT_SERVICE_URL: ${RESTAURANT_SERVICE_URL}
      MEDIA_SERVICE_URL: ${MEDIA_SERVICE_URL}
      RESERVATION_SERVICE_URL: ${RESERVATION_SERVICE_URL}
      MENU_ITEM_SERVICE_URL: ${MENU_ITEM_SERVICE_URL}
    depends_on:
      - user-db

  restaurant-service:
    build: ./restaurant-service
    container_name: restaurant-service
    environment:
      RESTAURANTS_DB_URL: ${RESTAURANTS_DB_URL}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      API_GATEWAY_URL: ${API_GATEWAY_URL}
      USER_SERVICE_URL: ${USER_SERVICE_URL}
      AUTH_SERVICE_URL: ${AUTH_SERVICE_URL}
      RESTAURANT_SERVICE_URL: ${RESTAURANT_SERVICE_URL}
      MEDIA_SERVICE_URL: ${MEDIA_SERVICE_URL}
      RESERVATION_SERVICE_URL: ${RESERVATION_SERVICE_URL}
      MENU_ITEM_SERVICE_URL: ${MENU_ITEM_SERVICE_URL}
      RESTAURANT_CACHE_HOST: ${RESTAURANT_CACHE_HOST}
      RESTAURANT_CACHE_PORT: ${RESTAURANT_CACHE_PORT}
    depends_on:
      - restaurant-db
      - media-service
      - kafka
      - restaurant-cache
  
  media-service:
    build: ./media-service
    container_name: media-service
    environment:
      MINIO_URL: ${MINIO_ENDPOINT}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      API_GATEWAY_URL: ${API_GATEWAY_URL}
      USER_SERVICE_URL: ${USER_SERVICE_URL}
      AUTH_SERVICE_URL: ${AUTH_SERVICE_URL}
      RESTAURANT_SERVICE_URL: ${RESTAURANT_SERVICE_URL}
      MEDIA_SERVICE_URL: ${MEDIA_SERVICE_URL}
      RESERVATION_SERVICE_URL: ${RESERVATION_SERVICE_URL}
      MENU_ITEM_SERVICE_URL: ${MENU_ITEM_SERVICE_URL}
    depends_on:
      - minio

  reservation-service:
    build: ./reservation-service
    container_name: reservation-service
    environment:
      RESERVATIONS_DB_URL: ${RESERVATIONS_DB_URL}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      API_GATEWAY_URL: ${API_GATEWAY_URL}
      USER_SERVICE_URL: ${USER_SERVICE_URL}
      AUTH_SERVICE_URL: ${AUTH_SERVICE_URL}
      RESTAURANT_SERVICE_URL: ${RESTAURANT_SERVICE_URL}
      MEDIA_SERVICE_URL: ${MEDIA_SERVICE_URL}
      RESERVATION_SERVICE_URL: ${RESERVATION_SERVICE_URL}
      MENU_ITEM_SERVICE_URL: ${MENU_ITEM_SERVICE_URL}
    depends_on:
      - reservation-db
      - restaurant-service
      - user-service
      - kafka

  menu-item-service:
    build: ./menu-item-service
    container_name: menu-item-service
    environment:
      MENU_ITEM_DB_URL: ${MENU_ITEM_DB_URL}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      API_GATEWAY_URL: ${API_GATEWAY_URL}
      USER_SERVICE_URL: ${USER_SERVICE_URL}
      AUTH_SERVICE_URL: ${AUTH_SERVICE_URL}
      RESTAURANT_SERVICE_URL: ${RESTAURANT_SERVICE_URL}
      MEDIA_SERVICE_URL: ${MEDIA_SERVICE_URL}
      RESERVATION_SERVICE_URL: ${RESERVATION_SERVICE_URL}
      MENU_ITEM_SERVICE_URL: ${MENU_ITEM_SERVICE_URL}
      MENU_ITEM_CACHE_HOST: ${MENU_ITEM_CACHE_HOST}
      MENU_ITEM_CACHE_PORT: ${MENU_ITEM_CACHE_PORT}
    depends_on:
      - menu-item-db
      - restaurant-service
      - kafka
      
  notification-service:
    build: ./notification-service
    container_name: notification-service
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      EMAIL_USERNAME: ${EMAIL_USERNAME}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      API_GATEWAY_URL: ${API_GATEWAY_URL}
      USER_SERVICE_URL: ${USER_SERVICE_URL}
      AUTH_SERVICE_URL: ${AUTH_SERVICE_URL}
      RESTAURANT_SERVICE_URL: ${RESTAURANT_SERVICE_URL}
      MEDIA_SERVICE_URL: ${MEDIA_SERVICE_URL}
      RESERVATION_SERVICE_URL: ${RESERVATION_SERVICE_URL}
      MENU_ITEM_SERVICE_URL: ${MENU_ITEM_SERVICE_URL}
    depends_on:
      - kafka

  analytics-service:
    build: ./analytics-service
    container_name: analytics-service
    environment:
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      API_GATEWAY_URL: ${API_GATEWAY_URL}
      USER_SERVICE_URL: ${USER_SERVICE_URL}
      AUTH_SERVICE_URL: ${AUTH_SERVICE_URL}
      RESTAURANT_SERVICE_URL: ${RESTAURANT_SERVICE_URL}
      MEDIA_SERVICE_URL: ${MEDIA_SERVICE_URL}
      RESERVATION_SERVICE_URL: ${RESERVATION_SERVICE_URL}
      MENU_ITEM_SERVICE_URL: ${MENU_ITEM_SERVICE_URL}
      ANALYTICS_DB_URL: ${ANALYTICS_DB_URL}
    depends_on:
      - kafka
      - analytics-db

volumes:
  minio-data:
  user-pgdata:
  restaurant-pgdata:
  reservation-pgdata:
  menu-item-pgdata:
  analytics-pgdata:
  location-redis-data:
  menu-item-cache-data:
  restaurant-cache-data:

